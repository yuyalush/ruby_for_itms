===================================
システム開発を取り巻く環境について
===================================


環境の変化
----------

システムの開発現場では、工数が割けない状況が加速しています。コンピューターの処理能力が劇的にも

古くからあるウォータフォール型の開発フローから、アジャイルと言われる短いターンでウォーターフォールの最初から最後を何度もこなすような手法も市民権を得たと言って過言ではない状況です。システムの開発手法がどんどんチューニングされる中、当然使う「道具」にも求められるものが変化してきました。

従来からある重厚なシステム開発手法は、大量の人員を階層構造に組織化し大型の開発を前提とした手法と言えます。もちろん、ここで用いられるツールは大量の開発者が作業に参入する状況を想定し、その中でより開発にとって有益なツールであることが求められて来ました。

Javaに代表される開発言語は、大型の開発チームにおいてシステムが健全に開発されることを助ける機能を多く有しています。

システム開発の管理手法が大型組織を対象とするものから、徐々に小型な組織
を形成し、自主性に任せチーム間の相互作用を生かすものへと変化していきま
した。その結果、開発言語は「適正な状況を作り出す厳格なもの」から「どん
どん開発し、どんどん修正」するようなやり方を促進するものが求められるこ
ととなりました。

ハード処理能力の向上
--------------------

一方、コンピューター言語が動く環境、つまりハードウェアも劇的な進化を遂げています。ネットワークが高速になり、有線は無線になり、コンピューターの処理能力や記憶能力は飛躍的に伸びました。
そして、仮想化の技術によりサーバーすらソフトウェアで作り出される物になりました。

このハードウェアの進化も、ソフトウェア開発に大きな影響を及ぼしておりま
す。

コンピューター資源が高価であったため乏しい環境の中で高速に動くことが求められた時代は、どうしてもコンピューターに近い低級言語を使用せざるを得ない状況でした。１ビットのメモリも無駄にせず、CPUの１サイクルも無駄にできない時代です。

ところが現在は、メモリは潤沢にあり、CPUも演算能力が非常に高い物が使われる時代になりました。つまり、コンピューター言語自体の処理に能力が求められたとしても十分に要件を満たしつつ処理することが可能になったといえます。その為、コンピューター言語は高級化、つまりより人間が使用する自然言語に近いものを使うことが可能になりました。

人間が使う言語に近い言語を利用できるということは、プログラムの習得における言語に慣れる時間が短くなったことを意味します。より多くの時間をアルゴリズムの設計や、プログラムの中身を考えることに割けることとなります。
また、多くの開発者を養成することが可能となりました。

Rubyは文法がわかりやすいという特徴があります。これは同時に、コンピュー
ターには処理しにくい言語であるとも言えます。さらにRubyは設計方針が人間
に優しい言語を目指しており、コンピューターに負担をかけたとしても人間に
とって便利にしていくことを選択してきた言語です。

そのため、非常に遅いという弱点がありました。
ところが、現在はハードウェアが発達した為、この弱点を補強することができ
るようになってきました。


