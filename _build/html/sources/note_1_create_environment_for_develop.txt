========================================
ノート１：独自に環境を作る方法
========================================

環境を作る前提
------------------------------
現在Rubyの処理系は複数存在しますが、基本的にはMRIと呼ばれるものを利用して下さい。それ以外については、言語に慣れてシステムの本番稼働などをするときには場合によっては知っているほうがよいことがあります。

RubyはUnixやLinuxとの相性が良いです。そのため、実行速度という面からみるとWindows以外で稼働させるほうがパフォーマンスが良いとされております。開発時はどのプラットフォームでも問題ありませんが、もし速度を求められる場合はUnix系(MacOSXも含まれます)やLinuxを使う方がよいでしょう。


開発環境構築手順
------------------------------
初級編では各自のPC内に開発環境を作らず、クラウド上のサーバに直接アクセスし開発を行いました。
これについては、当日のトラブル発生率をさげることを狙った運営上の理由からです。
各位で実施される場合は、ネット上のドキュメントなどを参考にＰＣ内に構築をして下さい。以下、ざっくりと各プラットフォーム毎の方法を書いておきます。

おすすめの流れは

  #. ＰＣに仮想環境を作る

  #. Ubuntuのインストール

  #. Ruby、Railsのインストール

です。

Rubyは1.8系と1.9系と呼ばれるバージョンの差があります。
今後は1.8系は使わず、1.9系を使う事が推奨されています。特殊な事情が無い限り、実行速度の面からも1.9系のセットアップを行うようにしましょう。

仮想環境を作り開発環境を作る場合
---------------------------------

仮想環境を手軽に構築する場合は、UbuntuというLinuxを使うと非常に手軽に行えます。仮想化を初めて使う場合は、非常に敷居が高いと感じるかもしれませんが、環境構築でベースのOSを汚さないことが可能となり便利です。

VirtualBoxをお使いの場合は http://www.ubuntulinux.jp/download/ より、仮想ハードディスクイメージをダウンロードすることで、いきなり使えます。

VMwareの場合はこちらがお勧めです。ただし、英語版なので日本語化を行って下さい。

http://www.trendsigma.net/vmware/ubuntu1104t.html

それ以外は、空のハードディスクイメージを作成し、そこへISOイメージからインストールを行って下さい。



Windowsでの開発環境構築
---------------------------------

Windowsの場合は、http://railsinstaller.org/ を使う事で、簡単にセットアップできるようになったようです。
ただし、Railsが3.1.1というバージョンが入ります。

Railsは3.0系以前と3.1/3.2系でかなり違うため、インストールはご注意ください。なお、ドキュメントでは3.0系を使うので、以下のサイトで詳細に説明されているので参考にしRuby1.9とRails3.0.10のセットアップを実施して下さい。

http://www.kkaneko.com/rinkou/ruby/rubyinstaller.html

インストールするものは

 * Ruby 1.9.2-p290

 * DevKit-tdm-32-4.5.2-20111229-1559-sfx.exe

作業は

  * Ruby1.9.2 のインストール
  * RubyInstaller Development Kit（DevKit）のインストール
  * RubyGems の更新
  * 不要「rspec, rspec-rails, git を gem を用いてインストール」
  * 不要「Sinatra を gem を用いてインストール」
  * Ruby on Rails を gem を用いてインストール

  注意！ Railsのインストールは以下のコマンドで行って下さい。

.. code-block:: none

  gem install rails -v=3.0.10


「DataMapper を使う場合」は不要です。

テスト実行は以下の流れで行って下さい。

.. code-block:: none

  rails new hoge -J -d sqlite3
  cd hoge
  bundle install
  rails g scaffold books title:string price:integer
  rake db:migrate
  rake db:setup
  rails server

この後 http://localhost:3000/ にアクセスして動いていればOKです。
「Facets を gem でインストール 」以下は全て不要です。


Ruby, Railsを使って開発するためのツール
---------------------------------------

ソフトウェアの開発時には専用のツールを用いるのが一般的です。
（例： VisualStudio, Eclipseなど）
RubyやRailsの開発で比較的多機能なエディタのみを使って開発が行われます。
動作が軽いことやカスタマイズを行えることから好まれている傾向がありますが、初めて開発をされる方には非常に解り難いと思います。
以下、幾つかツールをご紹介しますので、お試し頂き自分に合ったものをお選び下さい。

  #. Emacs
       Unix系のエディタです。Rubyの作者であるまつもと氏も使っているということから愛用者が多いエディタです。機能拡張が豊富にあり「エディタ」というよりは総合開発環境と言えるほどカスタマイズにより便利にすることが可能です。
       RubyとRailsで使う場合は、専用の機能拡張を入れて環境をつくるのがベストです。
       Windowsではxyzzyというエディタがあり、Emacs互換の動きをします。MeadowというエディタもWindows用に調整されたEmacs系のエディタです。
  #. Vim
       こちらもUnix系のエディタです。Emacs同様機能拡張を入れることで開発に特化した機能を持たせられます。私は最近はこちらをメインで使っています。各OS用に調整されたバイナリがありますので、そちらを使うのが良いと思います。
  #. aptana
       http://www.aptana.com/
       無料で利用できるIDEの中では一番良いと思います。中身はEclipseで、RubyやRails開発向けのプラグインがインストールされた状態のものです。使い方はRubyとRailsのセットアップを済ませ、Aptanaをインストールするだけです。
  #. RubyMine
       http://www.jetbrains.com/ruby/
       ３０日間無料で使える有償のIDEです。歴も長く、愛用者も多いツールです。
       各種開発ツール（GitやSubversion）などとも使えるなど総合開発ツールとして非常に便利なソフトウェアです。



